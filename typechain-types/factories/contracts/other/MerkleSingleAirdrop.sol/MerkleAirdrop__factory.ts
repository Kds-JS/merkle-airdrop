/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MerkleAirdrop,
  MerkleAirdropInterface,
} from "../../../../contracts/other/MerkleSingleAirdrop.sol/MerkleAirdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "userCanClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162000c9d38038062000c9d833981810160405281019062000037919062000120565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060a08181525050505062000167565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ad8262000080565b9050919050565b620000bf81620000a0565b8114620000cb57600080fd5b50565b600081519050620000df81620000b4565b92915050565b6000819050919050565b620000fa81620000e5565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600080604083850312156200013a57620001396200007b565b5b60006200014a85828601620000ce565b92505060206200015d8582860162000109565b9150509250929050565b60805160a051610afb620001a260003960008181610116015281816101fa015261044f0152600081816102ba01526104970152610afb6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632eb4a7ab1461005c5780633d13f8741461007a5780638cc0802514610096578063c02ae37b146100c6578063fc0c546a146100f6575b600080fd5b610064610114565b6040516100719190610585565b60405180910390f35b610094600480360381019061008f91906106a3565b610138565b005b6100b060048036038101906100ab9190610717565b61039d565b6040516100bd919061075f565b60405180910390f35b6100e060048036038101906100db91906106a3565b6103bd565b6040516100ed919061075f565b60405180910390f35b6100fe610495565b60405161010b9190610789565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156101c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bb90610801565b60405180910390fd5b600084846040516020016101d992919061088a565b604051602081830303815290604052805190602001209050600061021f84847f0000000000000000000000000000000000000000000000000000000000000000856104b9565b905080610261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025890610902565b60405180910390fd5b60016000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87876040518363ffffffff1660e01b8152600401610313929190610931565b6020604051808303816000875af1158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190610986565b610395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038c906109ff565b60405180910390fd5b505050505050565b60006020528060005260406000206000915054906101000a900460ff1681565b60008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610419576000905061048d565b6000858560405160200161042e92919061088a565b604051602081830303815290604052805190602001209050600061047485857f0000000000000000000000000000000000000000000000000000000000000000856104b9565b9050806104865760009250505061048d565b6001925050505b949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000826104c78686856104d2565b149050949350505050565b60008082905060005b8585905081101561051e57610509828787848181106104fd576104fc610a1f565b5b9050602002013561052a565b9150808061051690610a7d565b9150506104db565b50809150509392505050565b60008183106105425761053d8284610555565b61054d565b61054c8383610555565b5b905092915050565b600082600052816020526040600020905092915050565b6000819050919050565b61057f8161056c565b82525050565b600060208201905061059a6000830184610576565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105d5826105aa565b9050919050565b6105e5816105ca565b81146105f057600080fd5b50565b600081359050610602816105dc565b92915050565b6000819050919050565b61061b81610608565b811461062657600080fd5b50565b60008135905061063881610612565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106635761066261063e565b5b8235905067ffffffffffffffff8111156106805761067f610643565b5b60208301915083602082028301111561069c5761069b610648565b5b9250929050565b600080600080606085870312156106bd576106bc6105a0565b5b60006106cb878288016105f3565b94505060206106dc87828801610629565b935050604085013567ffffffffffffffff8111156106fd576106fc6105a5565b5b6107098782880161064d565b925092505092959194509250565b60006020828403121561072d5761072c6105a0565b5b600061073b848285016105f3565b91505092915050565b60008115159050919050565b61075981610744565b82525050565b60006020820190506107746000830184610750565b92915050565b610783816105ca565b82525050565b600060208201905061079e600083018461077a565b92915050565b600082825260208201905092915050565b7f416c726561647920636c61696d65642e00000000000000000000000000000000600082015250565b60006107eb6010836107a4565b91506107f6826107b5565b602082019050919050565b6000602082019050818103600083015261081a816107de565b9050919050565b60008160601b9050919050565b600061083982610821565b9050919050565b600061084b8261082e565b9050919050565b61086361085e826105ca565b610840565b82525050565b6000819050919050565b61088461087f82610608565b610869565b82525050565b60006108968285610852565b6014820191506108a68284610873565b6020820191508190509392505050565b7f496e76616c69642070726f6f662e000000000000000000000000000000000000600082015250565b60006108ec600e836107a4565b91506108f7826108b6565b602082019050919050565b6000602082019050818103600083015261091b816108df565b9050919050565b61092b81610608565b82525050565b6000604082019050610946600083018561077a565b6109536020830184610922565b9392505050565b61096381610744565b811461096e57600080fd5b50565b6000815190506109808161095a565b92915050565b60006020828403121561099c5761099b6105a0565b5b60006109aa84828501610971565b91505092915050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006109e96010836107a4565b91506109f4826109b3565b602082019050919050565b60006020820190508181036000830152610a18816109dc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8882610608565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aba57610ab9610a4e565b5b60018201905091905056fea26469706673582212209a40dbe9a2af4d0e8495a31d14508a0bbef997f858093bbfb966d09eb8736fb164736f6c63430008110033";

type MerkleAirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleAirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleAirdrop__factory extends ContractFactory {
  constructor(...args: MerkleAirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token_: PromiseOrValue<string>,
    merkleRoot_: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MerkleAirdrop> {
    return super.deploy(
      token_,
      merkleRoot_,
      overrides || {}
    ) as Promise<MerkleAirdrop>;
  }
  override getDeployTransaction(
    token_: PromiseOrValue<string>,
    merkleRoot_: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, merkleRoot_, overrides || {});
  }
  override attach(address: string): MerkleAirdrop {
    return super.attach(address) as MerkleAirdrop;
  }
  override connect(signer: Signer): MerkleAirdrop__factory {
    return super.connect(signer) as MerkleAirdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleAirdropInterface {
    return new utils.Interface(_abi) as MerkleAirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleAirdrop {
    return new Contract(address, _abi, signerOrProvider) as MerkleAirdrop;
  }
}
